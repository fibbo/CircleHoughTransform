import sys
import numpy as np
from ast import literal_eval

def readFile( filename ):
  """ Used to open files generated by the HoughTransform code. It reads the x, y coordinates of
      the circle points into a list of list (points) and seperately into lists x and y

  :param str filename: file to be opened
  :returns dictionary with following keys: Points, x and y. Points contains

  """
  try:
    f = open( filename, 'r' )
  except Exception, e:
    sys.exit( e )
  center = []
  radius = []
  nPoints = []
  x = []
  y = []
  for line in f:
    if not line.startswith( '#' ):
        sep = line.split()
        x.append( float( sep[1] ) )
        y.append( float( sep[2] ) )
    if 'Center' in line:
      sep = line.split()
      tmp = literal_eval( sep[8] )
      center.append( tmp )

    if 'Radius' in line:
      sep = line.split()
      radius.append( float( sep[6] ) )
    if 'Center' in line:
      sep = line.split()
      nPoints.append( float( sep[3] ) )

  return { 'x' : x, 'y' : y, 'Center' : center, 'Radius' : radius, 'nPoints' : nPoints }

def readFile2( filename ):
  """ Used to open files generated by the HoughTransform code. It reads the x, y coordinates of
      the circle points into a list of list (points) and seperately into lists x and y

  :param str filename: file to be opened
  :returns dictionary with following keys: Points, x and y. Points contains

  """
  try:
    f = open( filename, 'r' )
  except Exception, e:
    sys.exit( e )
  center = []
  radius = []
  nPoints = []
  allPoints = []
  for line in f:
    if not line.startswith( '#' ):
        sep = line.split()
        allPoints.append( np.array( [float( sep[1] ), float( sep[2] ) ] ) )
    if 'Center' in line:
      sep = line.split()
      tmp = literal_eval( sep[8] )
      center.append( tmp )

    if 'Radius' in line:
      sep = line.split()
      radius.append( float( sep[6] ) )
    if 'Center' in line:
      sep = line.split()
      nPoints.append( float( sep[3] ) )

  return { 'allPoints' : allPoints, 'Center' : center, 'Radius' : radius, 'nPoints' : nPoints }
